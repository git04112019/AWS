cloudwatch

essentials:

	cloudwatch is used to monitor AWS services, such as ec2, elb, and s3

	you monitor your environment by configuring and viewing cloudwatch metrics

	metrics are specific to each AWS service or resource, and include such metrics as:
		EC2 per-instance metrics:
			cpu utilization
			cpu credit usage
		S3 metrics:
			number of objects
			bucket size bytes
		elb metrics:
			request count
			unhealthy host count

	detailed vs basic level monitoring:
		basic: data is available automatically in 5 minute periods at no charge
		detailed: data is avai in 1 minute periods

	cloudwatch alarms can be created to trigger alerts (or other actions in your aws accts, such as sns topic) based on threshold you set on cloudwatch metrics

	auto scaling heavily utilizes cloudwatch - relying on threshold to trigger the addition (or removal) of instances from an autoscaling group


vpc flow logs:

	vpc flow logs allow you to collect information about the IP traffic going to and from the network interfaces in your vpc

	vpc flow log data is stored in a log group in cloud watch

	flow logs can be created on a specific vpc, subnet, or network interface

	flow logs created on a vpc or subnet will include all network interfaces in that vpc or subnet

	each network interface will have its own unique log stream

	you can set the log to capture data on accepted traffic, rejected traffic, or all traffic

	flow logs are NOT captured in 'real time' - the capture window is approx 10 minutes then data is published

	a 5-tuple is a set of five different values that comprise a tcp/ip connection. it includes:
		source ip address and source port number
		destination ip address and destination port number
		protocol


benefits of vpc flow logs:
	troubleshoot why certain traffic is not reaching an ec2 instance
	an added security layer by allowing you to monitor the traffic that reaches your ec2 instances

limitations of vpc flow logs:
	traffics NOT captured by vpc flow logs:
		traffic between an ec2 isntance and an amazon dns server
		traffic generated by request for instance metadata(curl request 169.254.../latest/meta-data)
		dhcp traffic



cloudwatch ec2 monitoring

	system status checks: (things outside of our control):
		loss of network connectivity
		loss of system power
		software issues on the physical host
		hardware issues on the physical host

		how to solve: generally stopping and restarting the instance will fix the issue. this causes the instance to launch on a different physical hardware device

	instance status checks (sw issues we do control):
		failed system status checks
		misconfigured networking or startup config
		exhausted memory
		corrupted file system
		incompatible kernel

		how to solve: generally a reboot, or solving the file system configuration issue


	by default, cloudwatch will automatically monitor metrics that can be viewed at the host level (not at the software level), such as:
		cpu utilization
		network in/out
		cpu credit balance
		cpu credit usage

	os level metrics that required a third party script (perl) to be installed:
		memory utilization
		disk swap utilization
		disk space utilization, disk space used, disk space available


cloudwatch alarms

	cloudwatch alarms allow for you (or the sys admin) to be notified when certain defined thresholds are met on cloudwatch metrics

	for exp, you can setup an alarm to be triggered whenever the cpu utilization metric on an ec2 instance goes above 70%

	alarms can also be used to trigger other events in aws like publishing to an sns topic or triggering autoscaling 




